* {
  margin: 0;
  padding: 0;
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: "Roboto"; }

a {
  color: inherit;
  text-decoration: none; }

::-webkit-scrollbar {
  width: 4px;
  height: 4px; }

::-webkit-scrollbar-track {
  background-color: transparent; }

body.dark *::selection {
  background-color: #89aec6; }

body.dark::-webkit-scrollbar-thumb {
  background-color: #89aec6; }

body.light *::selection {
  background-color: #c68989; }

body.light::-webkit-scrollbar-thumb {
  background-color: #c68989; }

.menu .hover-effect {
  position: relative;
  display: table;
  cursor: pointer; }

.menu .nav {
  height: 100vh; }
  .menu .nav .side ul {
    list-style: none; }
    .menu .nav .side ul li {
      margin-bottom: 16px; }

.ham {
  position: fixed;
  top: 16px;
  right: 16px;
  height: 48px;
  width: 48px;
  z-index: 100;
  cursor: pointer; }
  .ham span {
    height: 2px;
    width: 100%;
    left: 0;
    display: block;
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    position: absolute; }
    .ham span:nth-child(1) {
      top: 8px; }
    .ham span:nth-child(2) {
      top: 24px; }
    .ham span:nth-child(3) {
      top: 40px; }
  .ham:hover:not(.active) span:nth-child(1) {
    width: 40%; }
  .ham:hover:not(.active) span:nth-child(2) {
    width: 80%; }
  .ham:hover:not(.active) span:nth-child(3) {
    width: 60%; }
  .ham.active span:nth-child(1) {
    top: 24px;
    transform: rotate(-45deg); }
  .ham.active span:nth-child(2) {
    width: 0;
    left: 50%; }
  .ham.active span:nth-child(3) {
    top: 24px;
    transform: rotate(45deg); }

/* BASICS */
.CodeMirror {
  /* Set height, width, borders, and global font properties here */
  font-family: "Roboto", sans-serif;
  height: auto;
  min-height: 100vh;
  overflow: visible;
  color: inherit;
  direction: ltr;
  padding-bottom: 50vh; }
  .CodeMirror ::-webkit-scrollbar {
    width: 0px;
    background: transparent; }

/* PADDING */
.CodeMirror-lines {
  padding: 4px 0;
  /* Vertical padding around content */ }

.CodeMirror pre {
  padding: 0 4px;
  /* Horizontal padding of content */ }

.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  background-color: white;
  /* The little square between H and V scrollbars */ }

/* GUTTER */
.CodeMirror-gutters {
  border-right: 1px solid #ddd;
  background-color: #f7f7f7;
  white-space: nowrap; }

.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  color: #999;
  white-space: nowrap; }

.CodeMirror-guttermarker {
  color: black; }

.CodeMirror-guttermarker-subtle {
  color: #999; }

/* CURSOR */
.CodeMirror-cursor {
  border-left: 1px solid black;
  border-right: none;
  width: 0; }

/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 1px solid silver; }

.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0 !important;
  background: #7e7; }

.cm-fat-cursor div.CodeMirror-cursors {
  z-index: 1; }

.cm-fat-cursor-mark {
  background-color: rgba(20, 255, 20, 0.5);
  -webkit-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite; }

.cm-animate-fat-cursor {
  width: auto;
  border: 0;
  -webkit-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: #7e7; }

@-webkit-keyframes blink {
  0% { }
  50% {
    background-color: transparent; }
  100% { } }

@keyframes blink {
  0% { }
  50% {
    background-color: transparent; }
  100% { } }

/* Can style cursor different in overwrite (non-insert) mode */
.cm-tab {
  display: inline-block;
  text-decoration: inherit; }

.CodeMirror-rulers {
  position: absolute;
  left: 0;
  right: 0;
  top: -50px;
  bottom: -20px;
  overflow: hidden; }

.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  top: 0;
  bottom: 0;
  position: absolute; }

/* The rest of this file contains styles related to the mechanics of
 * the editor. You probably shouldn't touch them. */
.CodeMirror {
  position: relative;
  overflow: hidden;
  background: inherit; }

.CodeMirror-scroll {
  overflow: scroll !important;
  /* Things will break if this is overridden */
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -30px;
  margin-right: -30px;
  padding-bottom: 30px;
  height: 100%;
  outline: none;
  /* Prevent dragging from highlighting the element */
  position: relative; }

.CodeMirror-sizer {
  position: relative;
  border-right: 30px solid transparent; }

/* The fake, visible scrollbars. Used to force redraw during scrolling
 * before actual scrolling happens, thus preventing shaking and
 * flickering artifacts. */
.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none; }

.CodeMirror-vscrollbar {
  right: 0;
  top: 0;
  overflow-x: hidden;
  overflow-y: scroll; }

.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  overflow-x: scroll; }

.CodeMirror-scrollbar-filler {
  right: 0;
  bottom: 0; }

.CodeMirror-gutter-filler {
  left: 0;
  bottom: 0; }

.CodeMirror-gutters {
  position: absolute;
  left: 0;
  top: 0;
  min-height: 100%;
  z-index: 3; }

.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  display: inline-block;
  vertical-align: top;
  margin-bottom: -30px; }

.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important; }

.CodeMirror-gutter-background {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 4; }

.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4; }

.CodeMirror-gutter-wrapper ::-moz-selection, .CodeMirror-gutter-wrapper ::selection, .CodeMirror-gutter-wrapper ::-moz-selection {
  background-color: transparent; }

.CodeMirror-lines {
  cursor: text;
  min-height: 1px;
  /* prevents collapsing before first draw */ }

.CodeMirror pre {
  /* Reset some styles that the rest of the page might have set */
  border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-variant-ligatures: contextual;
  font-variant-ligatures: contextual; }

.CodeMirror-wrap pre {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal; }

.CodeMirror-linebackground {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 0; }

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  padding: 0.1px;
  /* Force widget margins to stay inside of the container */ }

.CodeMirror-rtl pre {
  direction: rtl; }

.CodeMirror-code {
  outline: none; }

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll, .CodeMirror-sizer, .CodeMirror-gutter, .CodeMirror-gutters, .CodeMirror-linenumber {
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden; }

.CodeMirror-cursor {
  position: absolute;
  pointer-events: none; }

.CodeMirror-measure pre {
  position: static; }

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3; }

div.CodeMirror-dragcursors {
  visibility: visible; }

.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible; }

.CodeMirror-selected {
  background: #d9d9d9; }

.CodeMirror-focused .CodeMirror-selected {
  background: #d7d4f0; }

.CodeMirror-crosshair {
  cursor: crosshair; }

.CodeMirror-line::-moz-selection {
  background: #d7d4f0; }

.CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection {
  background: #d7d4f0; }

.CodeMirror-line::selection {
  background: #d7d4f0; }

.CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection {
  background: #d7d4f0; }

.CodeMirror-line::-moz-selection {
  background: #d7d4f0; }

.CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection {
  background: #d7d4f0; }

.cm-searching {
  background-color: #ffa;
  background-color: rgba(255, 255, 0, 0.4); }

/* Used to force a border model for a node */
.cm-force-border {
  padding-right: .1px; }

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden; } }

/* See issue #2901 */
.cm-tab-wrap-hack:after {
  content: ''; }

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
  background: none; }

body.dark .CodeMirror {
  background-color: #222;
  color: rgba(255, 255, 255, 0.85); }

body.dark .CodeMirror-cursor {
  border-left: 2px solid rgba(204, 204, 204, 0.85); }

body.dark .CodeMirror div.CodeMirror-secondarycursor {
  border-left: 2px solid rgba(153, 153, 153, 0.85); }

body.dark .CodeMirror-selected, body.dark .CodeMirror-focused .CodeMirror-selected {
  background-color: rgba(137, 174, 198, 0.1); }

body.dark .cm-hr::after {
  background-color: rgba(255, 255, 255, 0.4); }

body.dark .cm-formatting {
  color: rgba(255, 255, 255, 0.3);
  text-decoration: none; }

body.dark .CodeMirror-line * *:not(.cm-m-markdown), body.dark .markdown-renderer.dark .token {
  color: #e9eded; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).CodeMirror-activeline-background, body.dark .markdown-renderer.dark .token.CodeMirror-activeline-background {
    background: transparent; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-keyword, body.dark .CodeMirror-line * *:not(.cm-m-markdown).keyword, body.dark .markdown-renderer.dark .token.cm-keyword, body.dark .markdown-renderer.dark .token.keyword {
    color: #c792ea; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-operator, body.dark .CodeMirror-line * *:not(.cm-m-markdown).operator, body.dark .markdown-renderer.dark .token.cm-operator, body.dark .markdown-renderer.dark .token.operator {
    color: #e9eded; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-variable-2, body.dark .CodeMirror-line * *:not(.cm-m-markdown).variable-2, body.dark .markdown-renderer.dark .token.cm-variable-2, body.dark .markdown-renderer.dark .token.variable-2 {
    color: #80CBC4; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-variable-3, body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-type, body.dark .CodeMirror-line * *:not(.cm-m-markdown).variable-3, body.dark .CodeMirror-line * *:not(.cm-m-markdown).type, body.dark .markdown-renderer.dark .token.cm-variable-3, body.dark .markdown-renderer.dark .token.cm-type, body.dark .markdown-renderer.dark .token.variable-3, body.dark .markdown-renderer.dark .token.type {
    color: DECB6B; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-builtin, body.dark .CodeMirror-line * *:not(.cm-m-markdown).builtin, body.dark .markdown-renderer.dark .token.cm-builtin, body.dark .markdown-renderer.dark .token.builtin {
    color: #DECB6B; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-atom, body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-number, body.dark .CodeMirror-line * *:not(.cm-m-markdown).atom, body.dark .CodeMirror-line * *:not(.cm-m-markdown).number, body.dark .markdown-renderer.dark .token.cm-atom, body.dark .markdown-renderer.dark .token.cm-number, body.dark .markdown-renderer.dark .token.atom, body.dark .markdown-renderer.dark .token.number {
    color: #F77669; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-string, body.dark .CodeMirror-line * *:not(.cm-m-markdown).string, body.dark .markdown-renderer.dark .token.cm-string, body.dark .markdown-renderer.dark .token.string {
    color: #C3E88D; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-string-2, body.dark .CodeMirror-line * *:not(.cm-m-markdown).string-2, body.dark .markdown-renderer.dark .token.cm-string-2, body.dark .markdown-renderer.dark .token.string-2 {
    color: #80CBC4; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-comment, body.dark .CodeMirror-line * *:not(.cm-m-markdown).comment, body.dark .markdown-renderer.dark .token.cm-comment, body.dark .markdown-renderer.dark .token.comment {
    color: #546E7A; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-variable, body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-def, body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-property, body.dark .CodeMirror-line * *:not(.cm-m-markdown).variable, body.dark .CodeMirror-line * *:not(.cm-m-markdown).def, body.dark .CodeMirror-line * *:not(.cm-m-markdown).property, body.dark .markdown-renderer.dark .token.cm-variable, body.dark .markdown-renderer.dark .token.cm-def, body.dark .markdown-renderer.dark .token.cm-property, body.dark .markdown-renderer.dark .token.variable, body.dark .markdown-renderer.dark .token.def, body.dark .markdown-renderer.dark .token.property {
    color: #82B1FF; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-tag, body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-meta, body.dark .CodeMirror-line * *:not(.cm-m-markdown).tag, body.dark .CodeMirror-line * *:not(.cm-m-markdown).meta, body.dark .markdown-renderer.dark .token.cm-tag, body.dark .markdown-renderer.dark .token.cm-meta, body.dark .markdown-renderer.dark .token.tag, body.dark .markdown-renderer.dark .token.meta {
    color: #ff5370; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-attribute, body.dark .CodeMirror-line * *:not(.cm-m-markdown).attribute, body.dark .markdown-renderer.dark .token.cm-attribute, body.dark .markdown-renderer.dark .token.attribute {
    color: #FFCB6B; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-qualifier, body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-variable-3, body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-type, body.dark .CodeMirror-line * *:not(.cm-m-markdown).qualifier, body.dark .CodeMirror-line * *:not(.cm-m-markdown).variable-3, body.dark .CodeMirror-line * *:not(.cm-m-markdown).type, body.dark .markdown-renderer.dark .token.cm-qualifier, body.dark .markdown-renderer.dark .token.cm-variable-3, body.dark .markdown-renderer.dark .token.cm-type, body.dark .markdown-renderer.dark .token.qualifier, body.dark .markdown-renderer.dark .token.variable-3, body.dark .markdown-renderer.dark .token.type {
    color: #DECB6B; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-tag, body.dark .CodeMirror-line * *:not(.cm-m-markdown).tag, body.dark .markdown-renderer.dark .token.cm-tag, body.dark .markdown-renderer.dark .token.tag {
    color: #ff5370; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).cm-error, body.dark .CodeMirror-line * *:not(.cm-m-markdown).error, body.dark .markdown-renderer.dark .token.cm-error, body.dark .markdown-renderer.dark .token.error {
    color: #EC5F67; }
  body.dark .CodeMirror-line * *:not(.cm-m-markdown).CodeMirror-matchingbracket, body.dark .markdown-renderer.dark .token.CodeMirror-matchingbracket {
    text-decoration: underline;
    color: white !important; }

body.light .CodeMirror {
  background-color: #fafafa;
  color: rgba(0, 0, 0, 0.85); }

body.light .CodeMirror-cursor {
  border-left: 2px solid rgba(0, 0, 0, 0.85); }

body.light .CodeMirror div.CodeMirror-secondarycursor {
  border-left: 2px solid rgba(0, 0, 0, 0.85); }

body.light .CodeMirror-selected, body.light .CodeMirror-focused .CodeMirror-selected {
  background-color: rgba(198, 137, 137, 0.1); }

body.light .cm-hr::after {
  background-color: rgba(0, 0, 0, 0.4); }

body.light .cm-formatting {
  color: rgba(0, 0, 0, 0.3);
  text-decoration: none; }

body.light .CodeMirror-line * *:not(.cm-m-markdown), body.light .markdown-renderer.light .token {
  color: #212121; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).CodeMirror-activeline-background, body.light .markdown-renderer.light .token.CodeMirror-activeline-background {
    background: transparent; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-keyword, body.light .CodeMirror-line * *:not(.cm-m-markdown).keyword, body.light .markdown-renderer.light .token.cm-keyword, body.light .markdown-renderer.light .token.keyword {
    color: #c792ea; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-operator, body.light .CodeMirror-line * *:not(.cm-m-markdown).operator, body.light .markdown-renderer.light .token.cm-operator, body.light .markdown-renderer.light .token.operator {
    color: #212121; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-variable-2, body.light .CodeMirror-line * *:not(.cm-m-markdown).variable-2, body.light .markdown-renderer.light .token.cm-variable-2, body.light .markdown-renderer.light .token.variable-2 {
    color: #80CBC4; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-variable-3, body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-type, body.light .CodeMirror-line * *:not(.cm-m-markdown).variable-3, body.light .CodeMirror-line * *:not(.cm-m-markdown).type, body.light .markdown-renderer.light .token.cm-variable-3, body.light .markdown-renderer.light .token.cm-type, body.light .markdown-renderer.light .token.variable-3, body.light .markdown-renderer.light .token.type {
    color: DECB6B; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-builtin, body.light .CodeMirror-line * *:not(.cm-m-markdown).builtin, body.light .markdown-renderer.light .token.cm-builtin, body.light .markdown-renderer.light .token.builtin {
    color: #DECB6B; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-atom, body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-number, body.light .CodeMirror-line * *:not(.cm-m-markdown).atom, body.light .CodeMirror-line * *:not(.cm-m-markdown).number, body.light .markdown-renderer.light .token.cm-atom, body.light .markdown-renderer.light .token.cm-number, body.light .markdown-renderer.light .token.atom, body.light .markdown-renderer.light .token.number {
    color: #B71C1C; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-string, body.light .CodeMirror-line * *:not(.cm-m-markdown).string, body.light .markdown-renderer.light .token.cm-string, body.light .markdown-renderer.light .token.string {
    color: #558b2f; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-string-2, body.light .CodeMirror-line * *:not(.cm-m-markdown).string-2, body.light .markdown-renderer.light .token.cm-string-2, body.light .markdown-renderer.light .token.string-2 {
    color: #00796b; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-comment, body.light .CodeMirror-line * *:not(.cm-m-markdown).comment, body.light .markdown-renderer.light .token.cm-comment, body.light .markdown-renderer.light .token.comment {
    color: #607d8b; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-variable, body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-def, body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-property, body.light .CodeMirror-line * *:not(.cm-m-markdown).variable, body.light .CodeMirror-line * *:not(.cm-m-markdown).def, body.light .CodeMirror-line * *:not(.cm-m-markdown).property, body.light .markdown-renderer.light .token.cm-variable, body.light .markdown-renderer.light .token.cm-def, body.light .markdown-renderer.light .token.cm-property, body.light .markdown-renderer.light .token.variable, body.light .markdown-renderer.light .token.def, body.light .markdown-renderer.light .token.property {
    color: #2196f3; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-tag, body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-meta, body.light .CodeMirror-line * *:not(.cm-m-markdown).tag, body.light .CodeMirror-line * *:not(.cm-m-markdown).meta, body.light .markdown-renderer.light .token.cm-tag, body.light .markdown-renderer.light .token.cm-meta, body.light .markdown-renderer.light .token.tag, body.light .markdown-renderer.light .token.meta {
    color: #ff5370; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-attribute, body.light .CodeMirror-line * *:not(.cm-m-markdown).attribute, body.light .markdown-renderer.light .token.cm-attribute, body.light .markdown-renderer.light .token.attribute {
    color: #FFCB6B; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-qualifier, body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-variable-3, body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-type, body.light .CodeMirror-line * *:not(.cm-m-markdown).qualifier, body.light .CodeMirror-line * *:not(.cm-m-markdown).variable-3, body.light .CodeMirror-line * *:not(.cm-m-markdown).type, body.light .markdown-renderer.light .token.cm-qualifier, body.light .markdown-renderer.light .token.cm-variable-3, body.light .markdown-renderer.light .token.cm-type, body.light .markdown-renderer.light .token.qualifier, body.light .markdown-renderer.light .token.variable-3, body.light .markdown-renderer.light .token.type {
    color: #DECB6B; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-tag, body.light .CodeMirror-line * *:not(.cm-m-markdown).tag, body.light .markdown-renderer.light .token.cm-tag, body.light .markdown-renderer.light .token.tag {
    color: #ff5370; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).cm-error, body.light .CodeMirror-line * *:not(.cm-m-markdown).error, body.light .markdown-renderer.light .token.cm-error, body.light .markdown-renderer.light .token.error {
    color: #EC5F67; }
  body.light .CodeMirror-line * *:not(.cm-m-markdown).CodeMirror-matchingbracket, body.light .markdown-renderer.light .token.CodeMirror-matchingbracket {
    text-decoration: underline;
    color: white !important; }

.CodeMirror {
  font-size: 24px; }

.cm-header {
  font-weight: 800;
  line-height: 1.1em; }

.cm-header-1 {
  font-size: 2.4em;
  line-height: 1.6em; }

.cm-header-2 {
  font-size: 2em;
  line-height: 1.4em; }

.cm-header-3 {
  font-size: 1.8em;
  line-height: 1.2em; }

.cm-header-4 {
  font-size: 1.4em; }

.cm-header-5 {
  font-size: 1.2em; }

.cm-header-6 {
  font-size: 1em; }

.cm-formatting:not(.cm-formatting-header):not(.cm-formatting-quote) {
  font-size: 0.6em;
  opacity: 0.8; }

.CodeMirror *:not(.cm-m-markdown) {
  font-family: 'Roboto Mono', monospace; }

.CodeMirror-placeholder {
  font-family: "Roboto", sans-serif !important;
  opacity: 0.2; }

.cm-em {
  font-style: italic; }

.cm-strong {
  font-weight: 800; }

.cm-strikethrough {
  text-decoration: line-through; }

.cm-underline {
  text-decoration: underline; }

.cm-formatting-list {
  padding: 0 8px 0 32px; }

.cm-code {
  font-family: 'Roboto Mono', monospace; }

.cm-hr::after {
  content: "";
  position: absolute;
  height: 1px;
  width: calc(100% - 32px);
  left: 16px;
  right: 16px;
  top: 50%; }

.cm-formatting-quote {
  padding-right: 16px; }

.markdown-renderer {
  font-size: 24px;
  padding: 4px 0; }
  .markdown-renderer h1, .markdown-renderer h2, .markdown-renderer h3, .markdown-renderer h4, .markdown-renderer h5, .markdown-renderer h6 {
    font-weight: 800;
    line-height: 1.1em; }
  .markdown-renderer h1 {
    font-size: 2.4em;
    line-height: 1.6em; }
  .markdown-renderer h2 {
    font-size: 2em;
    line-height: 1.4em; }
  .markdown-renderer h3 {
    font-size: 1.8em;
    line-height: 1.2em; }
  .markdown-renderer h4 {
    font-size: 1.4em; }
  .markdown-renderer h5 {
    font-size: 1.2em; }
  .markdown-renderer h6 {
    font-size: 1em; }
  .markdown-renderer pre, .markdown-renderer blockquote {
    padding: 8px 32px;
    margin: 8px 0; }
    .markdown-renderer pre code, .markdown-renderer blockquote code {
      font-family: "Roboto-Mono", monospace; }
      .markdown-renderer pre code .token, .markdown-renderer blockquote code .token {
        font-family: inherit; }
  .markdown-renderer hr {
    height: 1px;
    margin: 8px 0; }
  .markdown-renderer ul, .markdown-renderer ol {
    margin-left: 32px; }

body.dark .markdown-renderer.dark {
  color: rgba(255, 255, 255, 0.85); }
  body.dark .markdown-renderer.dark pre, body.dark .markdown-renderer.dark blockquote {
    background-color: #111;
    border-left: 4px solid #89aec6; }
    body.dark .markdown-renderer.dark pre code, body.dark .markdown-renderer.dark blockquote code {
      color: #82B1FF; }
  body.dark .markdown-renderer.dark hr {
    background-color: rgba(255, 255, 255, 0.4); }

body.light .markdown-renderer.light {
  color: rgba(0, 0, 0, 0.85); }
  body.light .markdown-renderer.light pre, body.light .markdown-renderer.light blockquote {
    background-color: #cfcfcf;
    border-left: 4px solid #c68989; }
    body.light .markdown-renderer.light pre code, body.light .markdown-renderer.light blockquote code {
      color: #2196f3; }
  body.light .markdown-renderer.light hr {
    background-color: rgba(0, 0, 0, 0.4); }
